package org.chartsy.main.intro;

import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import org.chartsy.main.intro.content.Constants;
import org.chartsy.main.intro.ui.StartPageContent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.util.ImageUtilities;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;

/**
 *
 * @author viorel.gheba
 */
@ConvertAsProperties(dtd = "-//org.chartsy.main.intro//Welcome//EN",
autostore = false)
public class WelcomeTopComponent extends TopComponent implements Constants {

    private static WelcomeTopComponent instance;
    private static final String PREFERRED_ID = "WelcomeTopComponent";

    public static synchronized WelcomeTopComponent getDefault() {
        if (instance == null) instance = new WelcomeTopComponent();
        return instance;
    }

    public static synchronized WelcomeTopComponent findInstance() {
        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
        if (win == null) { return getDefault(); }
        if (win instanceof WelcomeTopComponent) { return (WelcomeTopComponent) win; }
        return getDefault();
    }

    private WelcomeTopComponent() {
        initComponents();

        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);

        setLayout(new BorderLayout());
        add(new StartPageContent(), BorderLayout.CENTER);
    }

    private void initComponents() {
        setName("Welcome");
        setToolTipText("Welcome");
        setDisplayName("Welcome");
        setHtmlDisplayName("Welcome");
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_ALWAYS;
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
    }

    Object readProperties(java.util.Properties p) {
        if (instance == null) instance = this;
        instance.readPropertiesImpl(p);
        return instance;
    }

    private void readPropertiesImpl(java.util.Properties p) {
        String version = p.getProperty("version");
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D)g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        Image image = ImageUtilities.loadImage(IMAGE_LIGHT_EFFECT, true);
        g2.drawImage(image, 0, 0, this);
    }

}
